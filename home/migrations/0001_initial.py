# Generated by Django 4.0.7 on 2022-08-23 17:28

from django.db import migrations, models
import django.db.models.deletion
import home.blocks
import modelcluster.contrib.taggit
import modelcluster.fields
import sortedm2m.fields
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0069_log_entry_jsonfield'),
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('wagtailimages', '0024_index_image_file_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('is_project', models.BooleanField(default=False)),
                ('header', wagtail.fields.StreamField([('ImageHeader', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())])), ('ImageDivider', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock())]))], blank=True, null=True, use_json_field=None)),
                ('body', wagtail.fields.StreamField([('text', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(template='blocks/image.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('ImageDivider', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock())]))], blank=True, null=True, use_json_field=True)),
                ('unlisted', models.BooleanField(default=False)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlisted', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('articles', sortedm2m.fields.SortedManyToManyField(help_text=None, to='home.article')),
            ],
        ),
        migrations.CreateModel(
            name='PageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='home.article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('is_project', models.BooleanField(default=False)),
                ('body', wagtail.fields.StreamField([('HorizontalCardList', wagtail.blocks.StructBlock([('pages', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock()))], group='List')), ('CardList', wagtail.blocks.StructBlock([('pages', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock()))], group='List')), ('LinesList', wagtail.blocks.StructBlock([('pages', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock())), ('include_images', wagtail.blocks.BooleanBlock(default=True, required=False))], group='List')), ('AboutBlurb', wagtail.blocks.StructBlock([('tagline', wagtail.blocks.CharBlock()), ('column1_text', wagtail.blocks.RichTextBlock()), ('column2_text', wagtail.blocks.RichTextBlock()), ('page', wagtail.blocks.PageChooserBlock())], group='')), ('ContactForm', home.blocks.ContactForm(group='')), ('spacer', home.blocks.SpacerBlock(group='layout')), ('JumbotronCard', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock())], group='Image')), ('ImageHeader', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Image')), ('ImageDivider', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock())], group='Image')), ('ImageCard', wagtail.blocks.StructBlock([('header', wagtail.blocks.CharBlock()), ('description', wagtail.blocks.CharBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.blocks.CharBlock()), ('link_text', wagtail.blocks.CharBlock())], group='Image')), ('text', wagtail.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(template='blocks/image.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock())], blank=True, null=True, use_json_field=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='home.PageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
